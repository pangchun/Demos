package com.zhangqianchun.Pojo;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Random;

public class Image {

    private int weight = 100; //验证码图片的长和宽
    private int height = 40;
    private String text; //用来保存验证码的文本内容
    private Random random = new Random(); //获取随机数对象
    //private String[] fontNames = {"宋体", "华文楷体", "黑体", "微软雅黑", "楷体_GB2312"};   //字体数组
    //字体数组
    private String[] fontNames = {"Georgia"};
    //验证码数组
    private String codes = "23456789abcdefghjkmnopqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ";

    /* 获取随机的颜色 */
    private Color randomColor() {

        int r = this.random.nextInt(225); //这里为什么是225，因为当r，g，b都为255时，即为白色，为了好辨认，需要颜色深一点。
        int g = this.random.nextInt(225);
        int b = this.random.nextInt(225);

        return new Color(r,g,b); //返回一个随机颜色
    }

    /* 获取随机字体 */
    private Font randomFont() {

        int index = random.nextInt(fontNames.length); //获取随机的字体
        String fontName = fontNames[index];
        int style = random.nextInt(4); //随机获取字体的样式，0是无样式，1是加粗，2是斜体，3是加粗加斜体
        int size = random.nextInt(10) + 24; //随机获取字体的大小

        return new Font(fontName,style,size); //返回一个随机的字体
    }

    /* 获取随机字符 */
    private char randomChar() {

        int index = random.nextInt(codes.length());

        return codes.charAt(index);
    }

    /* 画干扰线，验证码干扰线用来防止计算机解析图片 */
    private void drawLine(BufferedImage image) {

        int num = random.nextInt(10); //定义干扰线的数量
        Graphics2D graphics2D = (Graphics2D) image.getGraphics();

        for (int i = 0; i < num; i++) {

            int x1 = random.nextInt(weight);
            int y1 = random.nextInt(height);
            int x2 = random.nextInt(weight);
            int y2 = random.nextInt(height);

            graphics2D.setColor(randomColor());
            graphics2D.drawLine(x1,y1,x2,y2);
        }
    }

    /* 创建图片的方法 */
    private BufferedImage createImage() {

        //创建图片缓冲区
        BufferedImage image = new BufferedImage(weight,height,BufferedImage.TYPE_INT_RGB);

        //获取画笔
        Graphics2D graphics2D = (Graphics2D) image.getGraphics();

        //设置背景色随机
        graphics2D.setColor(new Color(225,225,random.nextInt(245)+10));
        graphics2D.fillRect(0,0,weight,height);

        //返回一个图片
        return image;
    }

    /* 获取验证码图片的方法 */
    public BufferedImage getImage() {

        BufferedImage image = createImage();
        Graphics2D graphics2D = (Graphics2D) image.getGraphics();

        StringBuilder stringBuilder = new StringBuilder();

        for (int i = 0; i < 4; i++) { //画四个字符即可

            String s =randomChar()+" "; //随机生成字符，因为只有画字符串的方法，没有画字符的方法，所以需要将字符变成字符串再画
            stringBuilder.append(s);
            float x = i*1.0F*weight/4;//定义字符的x坐标
            graphics2D.setFont(randomFont());
            graphics2D.setColor(randomColor());
            graphics2D.drawString(s,x,height-5);

        }

        this.text = stringBuilder.toString();
        drawLine(image);

        return image;
    }

    /* 获取验证码文本的方法 */
    public String getText() {
        return text;
    }

    public static void output(BufferedImage image, OutputStream outputStream) throws IOException {
        ImageIO.write(image,"JPEG",outputStream);
    }

}
